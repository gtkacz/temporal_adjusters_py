# This workflow will install Python dependencies, run tests, and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI

on:
  push:
    branches: [ "main", "homolog" ]
  pull_request:
    branches: [ "main", "homolog" ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os-version:
          - {python: "3.3", os: "ubuntu-18.04"}
          - {python: "3.4", os: "ubuntu-18.04"}
          - {python: "3.5", os: "ubuntu-18.04"}
          - {python: "3.6", os: "ubuntu-20.04"}
          - {python: "3.7", os: "ubuntu-22.04"}
          - {python: "3.8", os: "ubuntu-22.04"}
          - {python: "3.9", os: "ubuntu-22.04"}
          - {python: "3.10", os: "ubuntu-latest"}
          - {python: "3.11", os: "ubuntu-latest"}
          - {python: "3.12", os: "ubuntu-latest"}
          - {python: "3.3", os: "windows-latest"}
          - {python: "3.4", os: "windows-latest"}
          - {python: "3.5", os: "windows-latest"}
          - {python: "3.6", os: "windows-latest"}
          - {python: "3.7", os: "windows-latest"}
          - {python: "3.8", os: "windows-latest"}
          - {python: "3.9", os: "windows-latest"}
          - {python: "3.10", os: "windows-latest"}
          - {python: "3.11", os: "windows-latest"}
          - {python: "3.12", os: "windows-latest"}
          - {python: "3.3", os: "macos-latest"}
          - {python: "3.4", os: "macos-latest"}
          - {python: "3.5", os: "macos-latest"}
          - {python: "3.6", os: "macos-latest"}
          - {python: "3.7", os: "macos-latest"}
          - {python: "3.8", os: "macos-latest"}
          - {python: "3.9", os: "macos-latest"}
          - {python: "3.10", os: "macos-latest"}
          - {python: "3.11", os: "macos-latest"}
          - {python: "3.12", os: "macos-latest"}

    runs-on: ${{ matrix.os-version.os }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.os-version.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.os-version.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        pip install -r requirements_dev.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run tests with coverage
      run: |
        coverage run -m unittest discover tests/ -v
    - name: Check coverage threshold
      run: |
        coverage report --fail-under=95

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && contains(github.ref, 'main')
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_dev.txt
      - name: Build package
        run: make build
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
